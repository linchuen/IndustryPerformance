spring:
  datasource:
    url: ${MYSQLURL:jdbc:mysql://localhost:3306/IndustryPerformance}
    username: root
    password: example
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        hbm2ddl.auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

  data:
    mongodb:
      uri: ${MONGODBURL:mongodb://localhost:27017,localhost:27027,localhost:27037/IndustryPerformance}
      auto-index-creation: true
    redis:
      database: 0
      host: ${REDISHOST:localhost}
      port: ${REDISPORT:6379}
      pool:
        max-idle: 8
        min-idle: 0
        max-active: 8
        max-wait: -1

  kafka:
    bootstrap-servers: ${KAFKAHOST:localhost:9092}
    consumer:
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

mybatis:
  mapper-locations: classpath:mappers/*xml

stock:
  csv:
    path: "D:\\csv\\"

logging:
  level:
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
    org.hibernate.SQL: DEBUG
    com.test.mapper: DEBUG
